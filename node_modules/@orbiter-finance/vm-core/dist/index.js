"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } } function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var a=Object.create;var c=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var l=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var e=(r,t)=>c(r,"name",{value:t,configurable:!0});var O=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports);var h=(r,t,o,f)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of p(t))!x.call(r,s)&&s!==o&&c(r,s,{get:()=>t[s],enumerable:!(f=V(t,s))||f.enumerable});return r};var I=(r,t,o)=>(o=r!=null?a(l(r)):{},h(t||!r||!r.__esModule?c(o,"default",{value:r,enumerable:!0}):o,r));var M=O(()=>{"use strict"});var n=function(r){return r.EVM="EVM",r.ZKLITEVM="ZKLITEVM",r.CAIROVM="CAIROVM",r.IMXVM="IMXVM",r.LPRVM="LPRVM",r.ZKSPVM="ZKSPVM",r.SOLANAVM="SOLANAVM",r.TVM="TVM",r.BTCVM="BTCVM",r.TRONVM="TRONVM",r.FUELVM="FUELVM",r.APTOSVM="APTOSVM",r.SUIVM="SUIVM",r}({});var _starknet = require('starknet');var _tronweb = require('tronweb');var _bitcoinjslib = require('bitcoinjs-lib'); var u = _interopRequireWildcard(_bitcoinjslib);var _tonweb = require('tonweb'); var _tonweb2 = _interopRequireDefault(_tonweb);async function X(r,t){switch(t){case n.EVM:return i(r);case n.BTCVM:return E(r);case n.CAIROVM:return d(r);case n.FUELVM:return R(r);case n.IMXVM:return T(r);case n.LPRVM:return P(r);case n.SOLANAVM:return await N(r);case n.TVM:return U(r);case n.TRONVM:return b(r);case n.ZKLITEVM:return C(r);case n.APTOSVM:return A(r);case n.SUIVM:return w(r);default:throw new Error(`Unsupported VMType: ${t}`)}}e(X,"isValidAddress");function i(r){try{return r.startsWith("0x")&&r.length==42}catch (e2){return!1}}e(i,"isEVMAddress");function E(r){try{return!r||r==""?!1:(u.address.toOutputScript(r,u.networks.bitcoin),!0)}catch (e3){return!1}}e(E,"isBTCAddress");function d(r){try{return!r||r.length<=53?!1:!!_starknet.validateAndParseAddress.call(void 0, r)}catch (e4){return!1}}e(d,"isCAIROAddress");function R(r){return r.length===66&&/(0x)[0-9a-f]{64}$/i.test(r)}e(R,"isFUELAddress");function T(r){return i(r)}e(T,"isIMXAddress");function P(r){return i(r)}e(P,"isLPRAddress");async function N(r){try{let o=(await Promise.resolve().then(() => _interopRequireWildcard(require("bs58")))).decode(r);return o.length>=32&&o.length<=44}catch (e5){return!1}}e(N,"isSOLANAAddress");function U(r){try{return!r||r==""?!1:!!new _tonweb2.default.Address(r)}catch (e6){return!1}}e(U,"isTONAddress");function b(r){return!r||r==""?!1:_tronweb.TronWeb.isAddress(r)}e(b,"isTRONAddress");function C(r){return i(r)}e(C,"isZKLITEAddress");function A(r){try{return r.startsWith("0x")&&r.length==66}catch (e7){return!1}}e(A,"isAPTOSAddress");function w(r){return A(r)}e(w,"isSUIAddress");var G=I(M());exports.VMType = n; exports.isAPTOSAddress = A; exports.isBTCAddress = E; exports.isCAIROAddress = d; exports.isEVMAddress = i; exports.isFUELAddress = R; exports.isIMXAddress = T; exports.isLPRAddress = P; exports.isSOLANAAddress = N; exports.isSUIAddress = w; exports.isTONAddress = U; exports.isTRONAddress = b; exports.isValidAddress = X; exports.isZKLITEAddress = C; exports.types = G;
//# sourceMappingURL=index.js.map